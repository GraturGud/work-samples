# На вход программе подается одно число n. Напишите программу, которая выводит список [1, 2, 3, ..., n].
n = list(range(1, int(input()) + 1))
print(n)

# На вход программе подается одно число n. 
# Напишите программу, которая выводит список, состоящий из n букв английского алфавита ['a', 'b', 'c', ...] в нижнем регистре.
n = int(input())
a = []
for i in range(97, 97 + n):
    s = chr(i)
    a += s
print(a)

# На вход программе подается натуральное число n, а затем n строк. 
# Напишите программу, которая создает из указанных строк список и выводит его.
n = int(input())
a = []
for i in range(n):
    a.append(input())
print(a)

# Напишите программу, выводящую следующий список:
# ['a', 'bb', 'ccc', 'dddd', 'eeeee', 'ffffff', ...]
a = []
char = ''
for i in range(26):
    char = chr(97 + i)
    a.append(char * (i + 1))
print(a)

# На вход программе подается натуральное число n, а затем n целых чисел. 
# Напишите программу, которая создает из указанных чисел список их кубов.
a = []
n = int(input())
for i in range(n):
    a.append(int(input()) ** 3)
print(a)

# На вход программе подается натуральное число n. 
# Напишите программу, которая создает список состоящий из делителей введенного числа.
a = []
n = int(input())
for i in range(1, n + 1):
    if n % i  == 0:
        a.append(i)
print(a)

# На вход программе подается натуральное число n≥2, а затем n целых чисел. 
# Напишите программу, которая создает из указанных чисел список, состоящий из сумм соседних чисел (0 и 1, 1 и 2, 2 и 3 и т.д.).
a = []
num = 0
last_num = 0
n = int(input())
for i in range(n):
    num = int(input())
    a.append(num + last_num)
    last_num = num
del a[0]
print(a)

# На вход программе подается натуральное число n, а затем n целых чисел. 
# Напишите программу, которая создает из указанных чисел список, 
# затем удаляет все элементы стоящие по нечетным индексам, а затем выводит полученный список.
a = []
n = int(input())
for i in range(n):
    a.append(int(input()))
del a[1::2]
print(a)

# На вход программе подается натуральное число n и n строк, а затем число k. 
# Напишите программу, которая выводит k-ую букву из введенных строк на одной строке без пробелов.
word = ''
a = []
n = int(input())
for i in range(n):
    a.append(input())
k = int(input())
for j in range(n):
    word = a[j]
    if len(word) >= k: 
        print(word[k-1], end='')

# На вход программе подается натуральное число n, а затем n строк. 
# Напишите программу, которая создает список из символов всех строк, а затем выводит его.
a = []
n = int(input())
for i in range(n):
    a.extend(input())
print(a)

# На вход программе подается натуральное число n, а затем n целых чисел. 
# Напишите программу, которая для каждого введенного числа x выводит значение функции f(x)=x^2+2x+1, каждое на отдельной строке.
a = []
n = int(input())
for _ in range(n):
    a.append(int(input()))
print(*a, sep='\n')
print()
for i in a:
    print(i ** 2 + 2 * i + 1)

# При анализе данных, собранных в рамках научного эксперимента, бывает полезно удалить самое большое и самое маленькое значение.
# На вход программе подается натуральное число n, а затем n различных натуральных чисел. 
# Напишите программу, которая удаляет наименьшее и наибольшее значение из указанных чисел, 
# а затем выводит оставшиеся числа каждое на отдельной строке, не меняя их порядок.
a = []
n = int(input())
for _ in range(n):
    a.append(int(input()))
a.remove(min(a))
a.remove(max(a))
print(*a, sep='\n')

# На вход программе подается натуральное число n, а затем n строк. 
# Напишите программу, которая выводит только уникальные строки, в том же порядке, в котором они были введены.
a = []
n = int(input())
text = ''
for _ in range(n):
    text = input()
    if text not in a:
        a.append(text)
print(*a, sep='\n')

# На вход программе подается натуральное число n, затем n строк, затем еще одна строка — поисковый запрос. 
# Напишите программу, которая выводит все введенные строки, в которых встречается поисковый запрос.
n = int(input())
a = []
for _ in range(n):
    a.append(input())
search = input()
for i in a:
    if search.lower() in i.lower():
        print(i)

# На вход программе подается натуральное число n, затем n строк, затем число k — количество поисковых запросов, 
# затем k строк — поисковые запросы. 
# Напишите программу, которая выводит все введенные строки, в которых встречаются все поисковые запросы.
lst = [] # список строк
search = [] # список запросов
num_lst = int(input()) # кол-во значений в lst
for _ in range(num_lst): # цикл на заполнение списка lst
    lst.append(input())
num_search = int(input()) # кол-во значений в search
for _ in range(num_search): # цикл на заполнение списка search
    search.append(input())

count = 0 # переменная для подсчета соответствий
result = []
# циклы сортировки данных
for text in lst:
    count = 0
    for srch in search:
        if srch.lower() in text.lower():
            count += 1
        if count == num_search:
            result.append(text)
print(*result, sep='\n')

# На вход программе подается натуральное число n, а затем n целых чисел. 
# Напишите программу, которая сначала выводит все отрицательные числа, затем нули, 
# а затем все положительные числа, каждое на отдельной строке. Числа должны быть выведены в том же порядке, в котором они были введены.
lst = []  # основной список
neg = []  # список отрицательных чисел
nul = []  # список нулей
pos = []  # список положительных чисел
n = int(input())  # количество значений в список lst
for _ in range(n):  # цикл заполнения списка lst
    lst.append(int(input()))
for i in lst:  # цикл сортировки значений lst
    if i < 0:
        neg.append(i)
    elif i == 0:
        nul.append(i)
    else:
        pos.append(i)
print(*neg, *nul, *pos, sep='\n')  # печатаем готовый список

# На вход программе подается строка текста. Напишите программу, которая выводит слова введенной строки в столбик.
text = input()
print(*text.split(), sep='\n')

# На вход программе подается строка текста, содержащая имя, отчество и фамилию человека. 
# Напишите программу, которая выводит инициалы человека.
name = input()
lst = name.split()
for i in lst:
    print(i[0], end='.')

# В операционной системе Windows полное имя файла состоит из буквы диска, после которого ставится двоеточие и символ  "\", 
# затем через такой же символ перечисляются подкаталоги (папки), в которых находится файл, в конце пишется имя файла (C:\Windows\System32\calc.exe).
# На вход программе подается одна строка с корректным именем файла в операционной системе Windows. 
# Напишите программу, которая разбирает строку на части, разделенные символом "\". Каждую часть вывести в отдельной строке.
path = input()
print(*path.split('\\'), sep='\n')

# На вход программе подается строка текста, содержащая целые числа. 
# Напишите программу, которая по заданным числам строит столбчатую диаграмму.
numb = input().split()
for i in range(len(numb)):
    numb[i] = '+' * int(numb[i])
    print(numb[i])

# На вход программе подается строка текста, содержащая 4 целых числа разделенных точкой. 
# Напишите программу, которая определяет является ли введенная строка текста корректным ip-адресом.
ip = input().split('.')
flag = True
for i in ip:
    if int(i) > 255:
        flag = False
        break
print('ДА' if flag == True else 'НЕТ')

# На вход программе подается строка текста и строка разделитель. 
# Напишите программу, которая вставляет указанный разделитель между каждым символом введенной строки текста.
text = list(input())
print(input().join(text))

# На вход программе подается строка текста, содержащая натуральные числа. Из данной строки формируется список чисел. 
# Напишите программу, которая подсчитывает, сколько в полученном списке пар элементов, равных друг другу. 
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
num = input().split()
count = 0
for i in range(len(num)):
    num[i] = int(num[i])
for j in range(len(num)):
    for k in range(j + 1, len(num)):
        if num[j] == num[k]:
            count += 1
print(count)

# Дополните приведенный код, numbers = [8, 9, 10, 11] чтобы он: 
# Заменил второй элемент списка на 17;
# Добавил числа 4, 5 и 6 в конец списка;
# Удалил первый элемент списка;
# Удвоил список;
# Вставил число 25 по индексу 3;
# Вывел список, с помощью функции print()
numbers = [8, 9, 10, 11]

numbers[1] = 17
numbers.extend([4, 5, 6])
del numbers[0]
numbers *= 2
numbers.insert(3, 25)
print(numbers)

# На вход программе подается строка текста, содержащая различные натуральные числа. 
# Из данной строки формируется список чисел. Напишите программу, которая меняет местами минимальный и максимальный элемент этого списка.
a = input().split()
for i in range(len(a)):
    a[i] = int(a[i])
max_ind = a.index(max(a))
min_ind = a.index(min(a))
a[max_ind], a[min_ind] = a[min_ind], a[max_ind]
print(*a)

# На вход программе подается строка, содержащая английский текст. 
# Напишите программу, которая подсчитывает общее количество артиклей: 'a', 'an', 'the'.
text = input()
text_new = text.lower().split()
print(f'''Общее количество артиклей: {text_new.count('a') + text_new.count('an') + text_new.count('the')}''')

# Немалоизвестный в пустошах Мохаве Курьер забрел в Хидден-Вэли – секретный бункер Братства Стали, и любезно соглашается помочь им в решении их проблем. 
# Одной из такой проблем являлся странный компьютерный вирус, который проявлялся в виде появления комментариев к программам на терминалах Братства Стали. 
# Известно, что программисты Братства никогда не оставляют комментарии к коду, и пишут программы на Python, поэтому удаление всех этих комментариев никак не навредит им. 
# Помогите писцу Ибсену удалить все комментарии из программы.
# На первой строке вводится символ решётки и сразу же натуральное число n — количество строк в программе, не считая первой. Далее следует n строк кода.
n = int(input()[1:])
lst = []
for _ in range(n):
    lst.append(input())
for i in range(len(lst)):
    if '#' in lst[i]:
        lst[i] = lst[i][:lst[i].rindex('#')]
        lst[i] = lst[i].rstrip()
print(*lst, sep='\n')

# На вход программе подается строка текста, содержащая целые числа. Из данной строки формируется список чисел. 
# Напишите программу, которая сортирует и выводит данный список сначала по возрастанию, а затем по убыванию. 
a = input().split()
for i in range(len(a)):
    a[i] = int(a[i])
a.sort()
print(*a)
a.sort(reverse = True)
print(*a)

